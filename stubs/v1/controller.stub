<?php

namespace App\Http\Controllers;

use App\Models\{{ModelName}};
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Validator;

class {{controllerName}} extends ApplicationController
{
    protected array $fields = [
        'files'=>['thumbnail','{{model_snake}}_file',],
        'inputs'=>['author*', 'title*', 'category',],
        'textfields'=>['body']
    ];

    private function {{modelObject}}(${{modelObject}}, $request)
    {
        $validator = Validator::make($request->all(), $this->generateRules($this->fields));
        if($validator->fails())
        {
            return redirect()->back()->withErrors($validator)->withInput();
        }

        ${{modelObject}}->title = $request->title;
        ${{modelObject}}->author = $request->author;
        ${{modelObject}}->category = $request->category;
        ${{modelObject}}->body = $request->body;

        if($request->has('publication_date'))
            ${{modelObject}}->publication_date = $request->publication_date;

        if($request->has('is_published'))
            ${{modelObject}}->is_published = $request->is_published;

        $this->attachThumbnail($request, ${{modelObject}}, '{{modelObject}}');
        $this->attachThumbnail($request, ${{modelObject}}, '{{modelObject}}', '{{model_snake}}_file');

        return $this->saveItem(${{modelObject}}, '{{modelObject}}');

    }
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        ${{modelObject}}s = {{ModelName}}::all();
        $fields = $this->fields;
        return view("{{model_snake}}s.index", compact("{{modelObject}}s", "fields"));
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(Request $request)
    {
        ${{modelObject}} = new {{ModelName}}();
        return $this->{{modelObject}}(${{modelObject}}, $request);
    }

    /**
     * Display the specified resource.
     */
    public function show({{ModelName}} ${{modelObject}})
    {
        return json_encode(['title' => ${{modelObject}}->title]);
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit({{ModelName}} ${{modelObject}})
    {
        //
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Request $request, {{ModelName}} ${{modelObject}})
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{ModelName}} ${{modelObject}})
    {
        $title = ${{modelObject}}->title;

        if(${{modelObject}}->delete())
        {
            return redirect('/{{modelObject}}s')
                ->with(['{{modelObject}}-message'=>'Successfully deleted '.$title,'type'=>'success']);
        }
        return redirect('/{{modelObject}}')
            ->with(['{{modelObject}}-message'=>'Failed to delete '.$title, 'type'=>'danger']);
    }
}
